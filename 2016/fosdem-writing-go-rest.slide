Building A Go REST Application
Experiences learned during the development of Heketi
31 Jan 2016

Luis Pabón
Principal Software Engineer, Red Hat Storage
lpabon@redhat.com
http://github/lpabon
@_lpabon_

* About me

Luis Pabón, Principal Software Engineer 
Red Hat Storage

.image fosdem-writing-go-rest/me.jpg _ 800

* History

Need a service to manage the GlusterFS volume lifecycle across multiple clusters.

Requirements:

- Http REST service with authentication
- Manage multiple nodes concurrently
- Maintain information on the clusters
- Simple deployment
- Allow concurrent requests
- Non-blocking

* Project Heketi

.link https://github.com/heketi/heketi

.image fosdem-writing-go-rest/heketi_overview.png _ 640

* Design

.image fosdem-writing-go-rest/arch.jpg

* Other Technologies

Python

- CherryPy, Bottlepy, Django

Ruby 

- Rails, Sinatra, RESTRack

Java

- RESTx, Jersey

* Why Go?

- Easy JSON integration

- Concurrency

- Simple deployment

- Simple HTTP framework

- Integrated testing framework

- Extra one*

* Lessons learned

* Asynchronous HTTP

* BoltDB

* Logging

* JSON

- Usage in Go

- Checking

* JSON Objects

- Models

* Concurrency

* SSH

* Middleware

* Continuous Integration

- Travis

- Coveralls

* CI - Mocking

* Versioning

* Authentication

* Deployment and Systemd

* Client - Arguments

* Client - HTTP

* Dockerizing

* Configuration

- Used JSON

- YAML used by other projects.

* Issues

- Shutting down the server



